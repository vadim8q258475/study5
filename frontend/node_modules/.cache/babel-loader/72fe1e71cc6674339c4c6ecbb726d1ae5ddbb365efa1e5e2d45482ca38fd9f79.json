{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trackPromise = exports.promiseCounterUpdateEventId = exports.manuallyResetPromiseCounter = exports.manuallyIncrementPromiseCounter = exports.manuallyDecrementPromiseCounter = exports.getCounter = exports.emitter = void 0;\nvar _tinyEmmiter = require(\"./tinyEmmiter\");\nvar _constants = require(\"./constants\");\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar emitter = new _tinyEmmiter.Emitter();\nexports.emitter = emitter;\nvar promiseCounterUpdateEventId = \"promise-counter-update\";\nexports.promiseCounterUpdateEventId = promiseCounterUpdateEventId;\nvar counter = _defineProperty({}, _constants.defaultArea, 0);\nvar getCounter = function getCounter(area) {\n  return counter[area];\n};\nexports.getCounter = getCounter;\nvar trackPromise = function trackPromise(promise, area) {\n  area = area || _constants.defaultArea;\n  incrementPromiseCounter(area);\n  var onResolveHandler = function onResolveHandler() {\n    return decrementPromiseCounter(area);\n  };\n  promise.then(onResolveHandler, onResolveHandler);\n  return promise;\n};\nexports.trackPromise = trackPromise;\nvar incrementPromiseCounter = function incrementPromiseCounter(area) {\n  incrementCounter(area);\n  var promiseInProgress = anyPromiseInProgress(area);\n  emitter.emit(promiseCounterUpdateEventId, promiseInProgress, area);\n};\nvar incrementCounter = function incrementCounter(area) {\n  if (Boolean(counter[area])) {\n    counter[area]++;\n  } else {\n    counter[area] = 1;\n  }\n};\nvar anyPromiseInProgress = function anyPromiseInProgress(area) {\n  return counter[area] > 0;\n};\nvar decrementPromiseCounter = function decrementPromiseCounter(area) {\n  counter[area] > 0 && decrementCounter(area);\n  var promiseInProgress = anyPromiseInProgress(area);\n  emitter.emit(promiseCounterUpdateEventId, promiseInProgress, area);\n};\nvar decrementCounter = function decrementCounter(area) {\n  counter[area]--;\n};\nvar manuallyResetPromiseCounter = function manuallyResetPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  counter[area] = 0;\n  emitter.emit(promiseCounterUpdateEventId, false, area);\n};\nexports.manuallyResetPromiseCounter = manuallyResetPromiseCounter;\nvar manuallyDecrementPromiseCounter = function manuallyDecrementPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  decrementPromiseCounter(area);\n};\nexports.manuallyDecrementPromiseCounter = manuallyDecrementPromiseCounter;\nvar manuallyIncrementPromiseCounter = function manuallyIncrementPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  incrementPromiseCounter(area);\n};\n// TODO: Enhancement we could catch here errors and throw an Event in case there's an HTTP Error\n// then the consumer of this event can be listening and decide what to to in case of error\nexports.manuallyIncrementPromiseCounter = manuallyIncrementPromiseCounter;","map":{"version":3,"names":["Object","defineProperty","exports","value","trackPromise","promiseCounterUpdateEventId","manuallyResetPromiseCounter","manuallyIncrementPromiseCounter","manuallyDecrementPromiseCounter","getCounter","emitter","_tinyEmmiter","require","_constants","_defineProperty","obj","key","enumerable","configurable","writable","Emitter","counter","defaultArea","area","promise","incrementPromiseCounter","onResolveHandler","decrementPromiseCounter","then","incrementCounter","promiseInProgress","anyPromiseInProgress","emit","Boolean","decrementCounter"],"sources":["/home/user/first_django/frontend/node_modules/react-promise-tracker/lib/trackPromise.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trackPromise = exports.promiseCounterUpdateEventId = exports.manuallyResetPromiseCounter = exports.manuallyIncrementPromiseCounter = exports.manuallyDecrementPromiseCounter = exports.getCounter = exports.emitter = void 0;\nvar _tinyEmmiter = require(\"./tinyEmmiter\");\nvar _constants = require(\"./constants\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nvar emitter = new _tinyEmmiter.Emitter();\nexports.emitter = emitter;\nvar promiseCounterUpdateEventId = \"promise-counter-update\";\nexports.promiseCounterUpdateEventId = promiseCounterUpdateEventId;\nvar counter = _defineProperty({}, _constants.defaultArea, 0);\nvar getCounter = function getCounter(area) {\n  return counter[area];\n};\nexports.getCounter = getCounter;\nvar trackPromise = function trackPromise(promise, area) {\n  area = area || _constants.defaultArea;\n  incrementPromiseCounter(area);\n  var onResolveHandler = function onResolveHandler() {\n    return decrementPromiseCounter(area);\n  };\n  promise.then(onResolveHandler, onResolveHandler);\n  return promise;\n};\nexports.trackPromise = trackPromise;\nvar incrementPromiseCounter = function incrementPromiseCounter(area) {\n  incrementCounter(area);\n  var promiseInProgress = anyPromiseInProgress(area);\n  emitter.emit(promiseCounterUpdateEventId, promiseInProgress, area);\n};\nvar incrementCounter = function incrementCounter(area) {\n  if (Boolean(counter[area])) {\n    counter[area]++;\n  } else {\n    counter[area] = 1;\n  }\n};\nvar anyPromiseInProgress = function anyPromiseInProgress(area) {\n  return counter[area] > 0;\n};\nvar decrementPromiseCounter = function decrementPromiseCounter(area) {\n  counter[area] > 0 && decrementCounter(area);\n  var promiseInProgress = anyPromiseInProgress(area);\n  emitter.emit(promiseCounterUpdateEventId, promiseInProgress, area);\n};\nvar decrementCounter = function decrementCounter(area) {\n  counter[area]--;\n};\nvar manuallyResetPromiseCounter = function manuallyResetPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  counter[area] = 0;\n  emitter.emit(promiseCounterUpdateEventId, false, area);\n};\nexports.manuallyResetPromiseCounter = manuallyResetPromiseCounter;\nvar manuallyDecrementPromiseCounter = function manuallyDecrementPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  decrementPromiseCounter(area);\n};\nexports.manuallyDecrementPromiseCounter = manuallyDecrementPromiseCounter;\nvar manuallyIncrementPromiseCounter = function manuallyIncrementPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  incrementPromiseCounter(area);\n};\n// TODO: Enhancement we could catch here errors and throw an Event in case there's an HTTP Error\n// then the consumer of this event can be listening and decide what to to in case of error\nexports.manuallyIncrementPromiseCounter = manuallyIncrementPromiseCounter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}